/*
  game.js source
  obfuscated code (ob.js) generated by https://www.obfuscator.io
*/

gameStarted = false;
dialogIsShowing = true;

var fullscreenWrapper = document.getElementById("fullscreen-wrapper");
var overlayDialog = document.getElementById("overlay-dialog");

// update compass rotation based on camera's rotation on Y axis
fullscreenWrapper.addEventListener('mousemove', e => {
  var cam = document.getElementById("camera");
  var compass = document.getElementById("compass");
  var rot = cam.getAttribute('rotation').y;

  compass.style.transform = 'rotate(' + rot + 'deg)';
  compass.style.webkitTransform = 'rotate(' + rot + 'deg)';
  compass.style.mozTransform = 'rotate(' + rot + 'deg)';
  compass.style.msTransform = 'rotate(' + rot + 'deg)';
  compass.style.oTransform = 'rotate(' + rot + 'deg)';
});

fullscreenWrapper.addEventListener('mousedown', e => {
  if(!isFullscreen()) {
    openFullscreen();
  }
  if(!gameStarted) {
    document.getElementById("overlay-intro").style.display = "none";
    gameStarted = true;
  }
  if (dialogIsShowing) {
    overlayDialog.style.display = "none";
    dialogIsShowing = false;
  }
});

function openFullscreen() {
  if (fullscreenWrapper.requestFullscreen) {
    fullscreenWrapper.requestFullscreen();
  } else if (elem.mozRequestFullScreen) {
    fullscreenWrapper.mozRequestFullScreen();
  } else if (elem.webkitRequestFullscreen) {
    fullscreenWrapper.webkitRequestFullscreen();
  } else if (elem.msRequestFullscreen) {
    fullscreenWrapper.msRequestFullscreen();
  }
}

function isFullscreen(){
  return 1 >= outerHeight - innerHeight;
}

function showDialog(title, text) {
  document.getElementById("dialog-title").innerHTML = title;
  document.getElementById("dialog-text").innerHTML = text;

  overlayDialog.style.display = "table";
  dialogIsShowing = true;
}

function calcDistance(elem1, elem2) {
  e1Pos = elem1.getAttribute("position");
  e2Pos = elem2.getAttribute("position");
  var a = e1Pos.x - e2Pos.x;
  var b = e1Pos.y - e2Pos.y;
  var c = e1Pos.z - e2Pos.z;
  return Math.sqrt(a*a + b*b + c*c);
}

var suspiciousRock = document.getElementById("suspicious-rock");
suspiciousRock.addEventListener('click', function (evt) {
  suspiciousRock.emit("flip-rock");
});

stages = [document.getElementById("s1"), document.getElementById("s2"), document.getElementById("s3"), document.getElementById("s4"), document.getElementById("s5"), document.getElementById("s6")];

for(var i=0; i<6; i++) {
  stages[i].addEventListener('click', function(evt) {
    var distance = calcDistance(document.getElementById("rig"), this);
    console.log(distance);
    if (distance<3) { // if player is withing 2.5 feet of the stage, show them the clue
      showDialog("Congratulations! You have found stage&nbsp;"+(i+1)+"!", "Here's a piece of the final coordinates:<br>N 39 16._9_");
    } else {
      showDialog("Almost...", "It's out of your reach. Try getting closer.");
    }
  });
}
